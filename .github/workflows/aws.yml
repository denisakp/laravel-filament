name: Deploy to Amazon

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - main

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: laravel-filament
  ECS_SERVICE: filament-service
  ECS_CLUSTER: EducationCluster
  ECS_TASK_DEFINITION: .github/aws/task-definition.json
  CONTAINER_NAME: laravel-filament

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy to ECR
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Automatic Tagging of releases
        id: increment-git-tag
        run: |
          bash .github/scripts/git-update.sh -v minor

      - name: Update the tag in task definition
        run: |
          bash .github/scripts/tsk-semver.sh -v ${{ steps.increment-git-tag.outputs.git-tag }}

      - name: Build, and push image to ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ steps.increment-git-tag.outputs.git-tag }}
        run: |
          docker build --build-arg="DB_HOST=${{secrets.DB_HOST}}" --build-arg="DB_PASSWORD=${{secrets.DB_PASSWORD}}" --build-arg="DB_USERNAME=${{secrets.DB_USERNAME}}" --build-arg="DB_DATABASE=${{secrets.DB_DATABASE}}" --build-arg="AWS_ACCESS_KEY_ID=${{secrets.AWS_ACCESS_KEY_ID}}" --build-arg="AWS_SECRET_ACCESS_KEY=${{secrets.AWS_SECRET_ACCESS_KEY}}" --build-arg="AWS_BUCKET=${{secrets.AWS_BUCKET}}" -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS Task ECS_TASK_DEFINITION
        id: task-definition
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-definition.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

